services:
    app:
        image: todo-frontend-dev
        build:
            context: ./todo-frontend # The context will pick this directory as the "build context"
            dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
        volumes:
            - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
        container_name: todo-frontend-dev

    # server:
    #     image: todo-backend-dev
    #     build:
    #         context: ./todo-backend
    #         dockerfile: dev.Dockerfile
    #     volumes:
    #         - .todo-backend/:/usr/src/app
    #     environment:
    #         - REDIS_URL=redis://redis:6379
    #         - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    #     depends_on:
    #         - mongo
    #         - redis
    #     container_name: todo-backend-dev

    # mongo:
    #     image: mongo
    #     ports:
    #         - 3456:27017
    #     environment:
    #         MONGO_INITDB_ROOT_USERNAME: root
    #         MONGO_INITDB_ROOT_PASSWORD: example
    #         MONGO_INITDB_DATABASE: the_database
    #     volumes:
    #         - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    #         - ./mongo_data:/data/db
    #     container_name: mongo

    # redis:
    #     image: redis
    #     ports:
    #         - 6379:6379
    #     command: ["redis-server", "--appendonly", "yes"] # Overwrite the CMD
    #     volumes:
    #         - ./redis_data:/data
    #     container_name: redis

    nginx:
        image: nginx:1.20.1
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - 8080:80
        container_name: reverse-proxy
        depends_on:
            - app # wait for the frontend container to be started
            # - server
# volumes:
#     mongo_data:
#     redis_data:
